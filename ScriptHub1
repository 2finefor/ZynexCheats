--[=[ d888b  db    db d888888b      .d888b.      db      db    db  .d8b. 88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 88      88    88    88            odD'      88      88    88 88ooo88 88  ooo 88    88    88          .88'        88      88    88 88~~~88 88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER ]=] -- Instances: 144 | Scripts: 16 | Modules: 0 local G2L = {}; -- StarterGui.MyLibrary G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")); G2L["1"]["Name"] = [[MyLibrary]]; G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling; G2L["1"]["ResetOnSpawn"] = false; -- StarterGui.MyLibrary.Main G2L["2"] = Instance.new("Frame", G2L["1"]); G2L["2"]["Active"] = true; G2L["2"]["BorderSizePixel"] = 0; G2L["2"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59); G2L["2"]["Size"] = UDim2.new(0, 400, 0, 400); G2L["2"]["Position"] = UDim2.new(0.5, 0, 0.5, 0); G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["2"]["Name"] = [[Main]]; -- StarterGui.MyLibrary.Main.UICorner G2L["3"] = Instance.new("UICorner", G2L["2"]); G2L["3"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.DropShadowHolder G2L["4"] = Instance.new("Frame", G2L["2"]); G2L["4"]["ZIndex"] = 0; G2L["4"]["BorderSizePixel"] = 0; G2L["4"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["4"]["Name"] = [[DropShadowHolder]]; G2L["4"]["BackgroundTransparency"] = 1; -- StarterGui.MyLibrary.Main.DropShadowHolder.DropShadow G2L["5"] = Instance.new("ImageLabel", G2L["4"]); G2L["5"]["ZIndex"] = 0; G2L["5"]["BorderSizePixel"] = 0; G2L["5"]["SliceCenter"] = Rect.new(49, 49, 450, 450); G2L["5"]["ScaleType"] = Enum.ScaleType.Slice; G2L["5"]["ImageTransparency"] = 0.5; G2L["5"]["ImageColor3"] = Color3.fromRGB(0, 0, 0); G2L["5"]["AnchorPoint"] = Vector2.new(0.5, 0.5); G2L["5"]["Image"] = [[rbxassetid://6014261993]]; G2L["5"]["Size"] = UDim2.new(1, 47, 1, 47); G2L["5"]["BackgroundTransparency"] = 1; G2L["5"]["Name"] = [[DropShadow]]; G2L["5"]["Position"] = UDim2.new(0.5, 0, 0.5, 0); -- StarterGui.MyLibrary.Main.Topbar G2L["6"] = Instance.new("Frame", G2L["2"]); G2L["6"]["BorderSizePixel"] = 0; G2L["6"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23); G2L["6"]["Size"] = UDim2.new(0, 400, 0, 41); G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["6"]["Name"] = [[Topbar]]; -- StarterGui.MyLibrary.Main.Topbar.UICorner G2L["7"] = Instance.new("UICorner", G2L["6"]); G2L["7"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.Topbar.Weurd G2L["8"] = Instance.new("Frame", G2L["6"]); G2L["8"]["BorderSizePixel"] = 0; G2L["8"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23); G2L["8"]["Size"] = UDim2.new(0, 400, 0, 22); G2L["8"]["Position"] = UDim2.new(0, 0, 0.46341, 0); G2L["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["8"]["Name"] = [[Weurd]]; -- StarterGui.MyLibrary.Main.Topbar.Weurd.Frame G2L["9"] = Instance.new("Frame", G2L["8"]); G2L["9"]["BorderSizePixel"] = 0; G2L["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["9"]["Size"] = UDim2.new(0, 400, 0, 1); G2L["9"]["Position"] = UDim2.new(0, 0, 1, 0); G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); -- StarterGui.MyLibrary.Main.Topbar.Title G2L["a"] = Instance.new("TextLabel", G2L["6"]); G2L["a"]["TextWrapped"] = true; G2L["a"]["Active"] = true; G2L["a"]["ZIndex"] = 15151; G2L["a"]["BorderSizePixel"] = 0; G2L["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["a"]["TextSize"] = 30; G2L["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal); G2L["a"]["TextColor3"] = Color3.fromRGB(255, 250, 250); G2L["a"]["BackgroundTransparency"] = 1; G2L["a"]["Size"] = UDim2.new(0, 168, 0, 49); G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["a"]["Text"] = [[Keta           .xyz]]; G2L["a"]["Name"] = [[Title]]; G2L["a"]["Position"] = UDim2.new(-0.10077, 0, -0.10297, 0); -- StarterGui.MyLibrary.Main.Topbar.Title.Text G2L["b"] = Instance.new("TextLabel", G2L["a"]); G2L["b"]["TextWrapped"] = true; G2L["b"]["Active"] = true; G2L["b"]["ZIndex"] = 15151; G2L["b"]["BorderSizePixel"] = 0; G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["b"]["TextSize"] = 30; G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal); G2L["b"]["TextColor3"] = Color3.fromRGB(255, 72, 40); G2L["b"]["BackgroundTransparency"] = 1; G2L["b"]["Size"] = UDim2.new(0, 140, 0, 49); G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["b"]["Text"] = [[ware]]; G2L["b"]["Name"] = [[Text]]; G2L["b"]["Position"] = UDim2.new(0.44979, 0, -0.0126, 0); -- StarterGui.MyLibrary.Main.ContentContainer G2L["c"] = Instance.new("Frame", G2L["2"]); G2L["c"]["Active"] = true; G2L["c"]["ZIndex"] = 0; G2L["c"]["BorderSizePixel"] = 0; G2L["c"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31); G2L["c"]["Size"] = UDim2.new(0, 331, 0, 333); G2L["c"]["Position"] = UDim2.new(0.085, 0, 0.0875, 0); G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["c"]["Name"] = [[ContentContainer]]; -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab G2L["d"] = Instance.new("Frame", G2L["c"]); G2L["d"]["Visible"] = false; G2L["d"]["Active"] = true; G2L["d"]["BorderSizePixel"] = 0; G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["d"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["d"]["Name"] = [[VisualTab]]; G2L["d"]["BackgroundTransparency"] = 1; -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Chams G2L["e"] = Instance.new("TextButton", G2L["d"]); G2L["e"]["BorderSizePixel"] = 0; G2L["e"]["TextSize"] = 14; G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["e"]["BackgroundColor3"] = Color3.fromRGB(96, 20, 20); G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["e"]["Size"] = UDim2.new(0, 275, 0, 30); G2L["e"]["Name"] = [[Chams]]; G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["e"]["Text"] = [[Chams]]; G2L["e"]["Position"] = UDim2.new(0, 30, 0, 20); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Chams.UICorner G2L["f"] = Instance.new("UICorner", G2L["e"]); G2L["f"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Chams.UIStroke G2L["10"] = Instance.new("UIStroke", G2L["e"]); G2L["10"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border; G2L["10"]["Color"] = Color3.fromRGB(214, 44, 44); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Chams.Icon G2L["11"] = Instance.new("ImageLabel", G2L["e"]); G2L["11"]["BorderSizePixel"] = 0; G2L["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["11"]["Image"] = [[rbxassetid://10723405649]]; G2L["11"]["Size"] = UDim2.new(0, 20, 0, 20); G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["11"]["BackgroundTransparency"] = 1; G2L["11"]["Name"] = [[Icon]]; G2L["11"]["Position"] = UDim2.new(1.3, 0, 0, 5); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Chams.UIPadding G2L["12"] = Instance.new("UIPadding", G2L["e"]); G2L["12"]["PaddingRight"] = UDim.new(0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Chams.LocalScript G2L["13"] = Instance.new("LocalScript", G2L["e"]); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Chams.Sound G2L["14"] = Instance.new("Sound", G2L["e"]); G2L["14"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["14"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.NameESP G2L["15"] = Instance.new("TextButton", G2L["d"]); G2L["15"]["BorderSizePixel"] = 0; G2L["15"]["TextSize"] = 14; G2L["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["15"]["BackgroundColor3"] = Color3.fromRGB(96, 20, 20); G2L["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["15"]["Size"] = UDim2.new(0, 275, 0, 30); G2L["15"]["Name"] = [[NameESP]]; G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["15"]["Text"] = [[Name ESP]]; G2L["15"]["Position"] = UDim2.new(0, 30, 0, 60); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.NameESP.UICorner G2L["16"] = Instance.new("UICorner", G2L["15"]); G2L["16"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.NameESP.UIPadding G2L["17"] = Instance.new("UIPadding", G2L["15"]); G2L["17"]["PaddingRight"] = UDim.new(0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.NameESP.UIStroke G2L["18"] = Instance.new("UIStroke", G2L["15"]); G2L["18"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border; G2L["18"]["Color"] = Color3.fromRGB(214, 44, 44); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.NameESP.Icon G2L["19"] = Instance.new("ImageLabel", G2L["15"]); G2L["19"]["BorderSizePixel"] = 0; G2L["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["19"]["Image"] = [[rbxassetid://10723405649]]; G2L["19"]["Size"] = UDim2.new(0, 20, 0, 20); G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["19"]["BackgroundTransparency"] = 1; G2L["19"]["Name"] = [[Icon]]; G2L["19"]["Position"] = UDim2.new(1.3, 0, 0, 5); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.NameESP.LocalScript G2L["1a"] = Instance.new("LocalScript", G2L["15"]); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.NameESP.Sound G2L["1b"] = Instance.new("Sound", G2L["15"]); G2L["1b"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["1b"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Tracers G2L["1c"] = Instance.new("TextButton", G2L["d"]); G2L["1c"]["BorderSizePixel"] = 0; G2L["1c"]["TextSize"] = 14; G2L["1c"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(96, 20, 20); G2L["1c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["1c"]["Size"] = UDim2.new(0, 275, 0, 30); G2L["1c"]["Name"] = [[Tracers]]; G2L["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["1c"]["Text"] = [[Tracers]]; G2L["1c"]["Position"] = UDim2.new(0, 30, 0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Tracers.UICorner G2L["1d"] = Instance.new("UICorner", G2L["1c"]); G2L["1d"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Tracers.UIPadding G2L["1e"] = Instance.new("UIPadding", G2L["1c"]); G2L["1e"]["PaddingRight"] = UDim.new(0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Tracers.UIStroke G2L["1f"] = Instance.new("UIStroke", G2L["1c"]); G2L["1f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border; G2L["1f"]["Color"] = Color3.fromRGB(214, 44, 44); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Tracers.Icon G2L["20"] = Instance.new("ImageLabel", G2L["1c"]); G2L["20"]["BorderSizePixel"] = 0; G2L["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["20"]["Image"] = [[rbxassetid://10723405649]]; G2L["20"]["Size"] = UDim2.new(0, 20, 0, 20); G2L["20"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["20"]["BackgroundTransparency"] = 1; G2L["20"]["Name"] = [[Icon]]; G2L["20"]["Position"] = UDim2.new(1.3, 0, 0, 5); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Tracers.LocalScript G2L["21"] = Instance.new("LocalScript", G2L["1c"]); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Tracers.Sound G2L["22"] = Instance.new("Sound", G2L["1c"]); G2L["22"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["22"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.ShowFOV G2L["23"] = Instance.new("TextButton", G2L["d"]); G2L["23"]["BorderSizePixel"] = 0; G2L["23"]["TextSize"] = 14; G2L["23"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["23"]["BackgroundColor3"] = Color3.fromRGB(96, 20, 20); G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["23"]["Size"] = UDim2.new(0, 275, 0, 30); G2L["23"]["Name"] = [[ShowFOV]]; G2L["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["23"]["Text"] = [[Enable FOV]]; G2L["23"]["Position"] = UDim2.new(0, 30, 0, 140); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.ShowFOV.UICorner G2L["24"] = Instance.new("UICorner", G2L["23"]); G2L["24"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.ShowFOV.UIPadding G2L["25"] = Instance.new("UIPadding", G2L["23"]); G2L["25"]["PaddingRight"] = UDim.new(0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.ShowFOV.UIStroke G2L["26"] = Instance.new("UIStroke", G2L["23"]); G2L["26"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border; G2L["26"]["Color"] = Color3.fromRGB(214, 44, 44); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.ShowFOV.Icon G2L["27"] = Instance.new("ImageLabel", G2L["23"]); G2L["27"]["BorderSizePixel"] = 0; G2L["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["27"]["Image"] = [[rbxassetid://10723405649]]; G2L["27"]["Size"] = UDim2.new(0, 20, 0, 20); G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["27"]["BackgroundTransparency"] = 1; G2L["27"]["Name"] = [[Icon]]; G2L["27"]["Position"] = UDim2.new(1.3, 0, 0, 5); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.ShowFOV.LocalScript G2L["28"] = Instance.new("LocalScript", G2L["23"]); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.ShowFOV.Sound G2L["29"] = Instance.new("Sound", G2L["23"]); G2L["29"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["29"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.ContentContainer.Display G2L["2a"] = Instance.new("Frame", G2L["c"]); G2L["2a"]["Visible"] = false; G2L["2a"]["BorderSizePixel"] = 0; G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59); G2L["2a"]["Size"] = UDim2.new(0, 157, 0, 239); G2L["2a"]["Position"] = UDim2.new(1.22659, 0, 0.08642, 0); G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["2a"]["Name"] = [[Display]]; -- StarterGui.MyLibrary.Main.ContentContainer.Display.DropShadowHolder G2L["2b"] = Instance.new("Frame", G2L["2a"]); G2L["2b"]["ZIndex"] = 0; G2L["2b"]["BorderSizePixel"] = 0; G2L["2b"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["2b"]["Name"] = [[DropShadowHolder]]; G2L["2b"]["BackgroundTransparency"] = 1; -- StarterGui.MyLibrary.Main.ContentContainer.Display.DropShadowHolder.DropShadow G2L["2c"] = Instance.new("ImageLabel", G2L["2b"]); G2L["2c"]["ZIndex"] = 0; G2L["2c"]["BorderSizePixel"] = 0; G2L["2c"]["SliceCenter"] = Rect.new(49, 49, 450, 450); G2L["2c"]["ScaleType"] = Enum.ScaleType.Slice; G2L["2c"]["ImageTransparency"] = 0.5; G2L["2c"]["ImageColor3"] = Color3.fromRGB(0, 0, 0); G2L["2c"]["AnchorPoint"] = Vector2.new(0.5, 0.5); G2L["2c"]["Image"] = [[rbxassetid://6014261993]]; G2L["2c"]["Size"] = UDim2.new(1, 47, 1, 47); G2L["2c"]["BackgroundTransparency"] = 1; G2L["2c"]["Name"] = [[DropShadow]]; G2L["2c"]["Position"] = UDim2.new(0.5, 0, 0.5, 0); -- StarterGui.MyLibrary.Main.ContentContainer.Display.UICorner G2L["2d"] = Instance.new("UICorner", G2L["2a"]); -- StarterGui.MyLibrary.Main.ContentContainer.Display.ImageLabel G2L["2e"] = Instance.new("ImageLabel", G2L["2a"]); G2L["2e"]["BorderSizePixel"] = 0; G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["2e"]["Image"] = [[rbxassetid://17898163329]]; G2L["2e"]["Size"] = UDim2.new(0, 100, 0, 136); G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["2e"]["BackgroundTransparency"] = 1; G2L["2e"]["Position"] = UDim2.new(0.17834, 0, 0.09205, 0); -- StarterGui.MyLibrary.Main.ContentContainer.Display.ImageLabel.UICorner G2L["2f"] = Instance.new("UICorner", G2L["2e"]); -- StarterGui.MyLibrary.Main.ContentContainer.Display.ImageLabel.TextLabel G2L["30"] = Instance.new("TextLabel", G2L["2e"]); G2L["30"]["TextWrapped"] = true; G2L["30"]["BorderSizePixel"] = 0; G2L["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["30"]["TextSize"] = 15; G2L["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal); G2L["30"]["TextColor3"] = Color3.fromRGB(255, 72, 40); G2L["30"]["BackgroundTransparency"] = 1; G2L["30"]["RichText"] = true; G2L["30"]["Size"] = UDim2.new(0, 177, 0, 37); G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["30"]["Text"] = [[ENABLED  :  ]]; G2L["30"]["Position"] = UDim2.new(-0.38, 0, 1.16912, 0); -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab G2L["31"] = Instance.new("Frame", G2L["c"]); G2L["31"]["Active"] = true; G2L["31"]["ZIndex"] = 15151; G2L["31"]["BorderSizePixel"] = 0; G2L["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["31"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["31"]["Name"] = [[CreditTab]]; G2L["31"]["BackgroundTransparency"] = 1; -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Title G2L["32"] = Instance.new("TextLabel", G2L["31"]); G2L["32"]["TextWrapped"] = true; G2L["32"]["BorderSizePixel"] = 0; G2L["32"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["32"]["TextSize"] = 40; G2L["32"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["32"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["32"]["BackgroundTransparency"] = 1; G2L["32"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["32"]["Text"] = [[CREDITS]]; G2L["32"]["Name"] = [[Title]]; -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Title.UIPadding G2L["33"] = Instance.new("UIPadding", G2L["32"]); G2L["33"]["PaddingBottom"] = UDim.new(0, 250); -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Title.Owner G2L["34"] = Instance.new("TextLabel", G2L["32"]); G2L["34"]["TextWrapped"] = true; G2L["34"]["BorderSizePixel"] = 0; G2L["34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["34"]["TextSize"] = 24; G2L["34"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["34"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["34"]["BackgroundTransparency"] = 1; G2L["34"]["RichText"] = true; G2L["34"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["34"]["Text"] = [[Scripts : Xanta ]]; G2L["34"]["Name"] = [[Owner]]; -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Title.Owner.UIPadding G2L["35"] = Instance.new("UIPadding", G2L["34"]); G2L["35"]["PaddingTop"] = UDim.new(0, 175); -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Title.Dizzy G2L["36"] = Instance.new("TextButton", G2L["32"]); G2L["36"]["TextWrapped"] = true; G2L["36"]["BorderSizePixel"] = 0; G2L["36"]["TextSize"] = 14; G2L["36"]["TextColor3"] = Color3.fromRGB(107, 58, 255); G2L["36"]["TextScaled"] = true; G2L["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["36"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["36"]["BackgroundTransparency"] = 1; G2L["36"]["Name"] = [[Dizzy]]; G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["36"]["Text"] = [[discord.gg/jFKyBGhWsm]]; G2L["36"]["Position"] = UDim2.new(0, 0, 0, 225); -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Title.Dizzy.LocalScript G2L["37"] = Instance.new("LocalScript", G2L["36"]); -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Ui G2L["38"] = Instance.new("TextLabel", G2L["31"]); G2L["38"]["TextWrapped"] = true; G2L["38"]["BorderSizePixel"] = 0; G2L["38"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["38"]["TextSize"] = 24; G2L["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["38"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["38"]["BackgroundTransparency"] = 1; G2L["38"]["RichText"] = true; G2L["38"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["38"]["Text"] = [[UI : 2FINE]]; G2L["38"]["Name"] = [[Ui]]; -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Ui.UIPadding G2L["39"] = Instance.new("UIPadding", G2L["38"]); G2L["39"]["PaddingBottom"] = UDim.new(0, 150); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab G2L["3a"] = Instance.new("Frame", G2L["c"]); G2L["3a"]["Visible"] = false; G2L["3a"]["BorderSizePixel"] = 0; G2L["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["3a"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["3a"]["Name"] = [[AimbotTab]]; G2L["3a"]["BackgroundTransparency"] = 1; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotBtn G2L["3b"] = Instance.new("TextButton", G2L["3a"]); G2L["3b"]["BorderSizePixel"] = 0; G2L["3b"]["TextSize"] = 14; G2L["3b"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(96, 20, 20); G2L["3b"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["3b"]["Size"] = UDim2.new(0, 275, 0, 30); G2L["3b"]["Name"] = [[AimbotBtn]]; G2L["3b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["3b"]["Text"] = [[Aimlock]]; G2L["3b"]["Position"] = UDim2.new(0, 30, 0, 20); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotBtn.UICorner G2L["3c"] = Instance.new("UICorner", G2L["3b"]); G2L["3c"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotBtn.UIStroke G2L["3d"] = Instance.new("UIStroke", G2L["3b"]); G2L["3d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border; G2L["3d"]["Color"] = Color3.fromRGB(214, 44, 44); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotBtn.Icon G2L["3e"] = Instance.new("ImageLabel", G2L["3b"]); G2L["3e"]["BorderSizePixel"] = 0; G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["3e"]["Image"] = [[rbxassetid://10723405649]]; G2L["3e"]["Size"] = UDim2.new(0, 20, 0, 20); G2L["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["3e"]["BackgroundTransparency"] = 1; G2L["3e"]["Name"] = [[Icon]]; G2L["3e"]["Position"] = UDim2.new(1.3, 0, 0, 5); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotBtn.UIPadding G2L["3f"] = Instance.new("UIPadding", G2L["3b"]); G2L["3f"]["PaddingRight"] = UDim.new(0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotBtn.LocalScript G2L["40"] = Instance.new("LocalScript", G2L["3b"]); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotBtn.Sound G2L["41"] = Instance.new("Sound", G2L["3b"]); G2L["41"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["41"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.Hitbox G2L["42"] = Instance.new("TextButton", G2L["3a"]); G2L["42"]["BorderSizePixel"] = 0; G2L["42"]["TextSize"] = 14; G2L["42"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["42"]["BackgroundColor3"] = Color3.fromRGB(96, 20, 20); G2L["42"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["42"]["Size"] = UDim2.new(0, 275, 0, 30); G2L["42"]["Name"] = [[Hitbox]]; G2L["42"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["42"]["Text"] = [[Hitbox Extender  ]]; G2L["42"]["Position"] = UDim2.new(0, 30, 0, 60); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.Hitbox.UICorner G2L["43"] = Instance.new("UICorner", G2L["42"]); G2L["43"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.Hitbox.UIPadding G2L["44"] = Instance.new("UIPadding", G2L["42"]); G2L["44"]["PaddingRight"] = UDim.new(0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.Hitbox.UIStroke G2L["45"] = Instance.new("UIStroke", G2L["42"]); G2L["45"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border; G2L["45"]["Color"] = Color3.fromRGB(214, 44, 44); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.Hitbox.Icon G2L["46"] = Instance.new("ImageLabel", G2L["42"]); G2L["46"]["BorderSizePixel"] = 0; G2L["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["46"]["Image"] = [[rbxassetid://10723405649]]; G2L["46"]["Size"] = UDim2.new(0, 20, 0, 20); G2L["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["46"]["BackgroundTransparency"] = 1; G2L["46"]["Name"] = [[Icon]]; G2L["46"]["Position"] = UDim2.new(1.3, 0, 0, 5); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.Hitbox.Sound G2L["47"] = Instance.new("Sound", G2L["42"]); G2L["47"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["47"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.Hitbox.LocalScript G2L["48"] = Instance.new("LocalScript", G2L["42"]); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.SilentAim G2L["49"] = Instance.new("TextButton", G2L["3a"]); G2L["49"]["BorderSizePixel"] = 0; G2L["49"]["TextSize"] = 14; G2L["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["49"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34); G2L["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["49"]["Size"] = UDim2.new(0, 275, 0, 30); G2L["49"]["BackgroundTransparency"] = 0.35; G2L["49"]["Name"] = [[SilentAim]]; G2L["49"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["49"]["Text"] = [[Silent Aim  (INOP)   ]]; G2L["49"]["Position"] = UDim2.new(0, 30, 0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.SilentAim.UICorner G2L["4a"] = Instance.new("UICorner", G2L["49"]); G2L["4a"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.SilentAim.UIPadding G2L["4b"] = Instance.new("UIPadding", G2L["49"]); G2L["4b"]["PaddingRight"] = UDim.new(0, 100); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.SilentAim.UIStroke G2L["4c"] = Instance.new("UIStroke", G2L["49"]); G2L["4c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border; G2L["4c"]["Color"] = Color3.fromRGB(45, 45, 45); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.SilentAim.Icon G2L["4d"] = Instance.new("ImageLabel", G2L["49"]); G2L["4d"]["BorderSizePixel"] = 0; G2L["4d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["4d"]["Image"] = [[rbxassetid://10723405649]]; G2L["4d"]["Size"] = UDim2.new(0, 20, 0, 20); G2L["4d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["4d"]["BackgroundTransparency"] = 1; G2L["4d"]["Name"] = [[Icon]]; G2L["4d"]["Position"] = UDim2.new(1.3, 0, 0, 5); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.SilentAim.Sound G2L["4e"] = Instance.new("Sound", G2L["49"]); G2L["4e"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["4e"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider G2L["4f"] = Instance.new("Frame", G2L["3a"]); G2L["4f"]["BorderSizePixel"] = 0; G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(73, 30, 3); G2L["4f"]["AnchorPoint"] = Vector2.new(0, 0.1); G2L["4f"]["Size"] = UDim2.new(0.96979, 0, 0, 35); G2L["4f"]["Position"] = UDim2.new(0, 5, 0, 276); G2L["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["4f"]["Name"] = [[AimbotSmoothnessSLider]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.UICorner G2L["50"] = Instance.new("UICorner", G2L["4f"]); G2L["50"]["CornerRadius"] = UDim.new(0, 4); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.UIStroke G2L["51"] = Instance.new("UIStroke", G2L["4f"]); G2L["51"]["Color"] = Color3.fromRGB(163, 69, 6); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.Title G2L["52"] = Instance.new("TextLabel", G2L["4f"]); G2L["52"]["BorderSizePixel"] = 0; G2L["52"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["52"]["TextSize"] = 14; G2L["52"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["52"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["52"]["BackgroundTransparency"] = 1; G2L["52"]["RichText"] = true; G2L["52"]["Size"] = UDim2.new(1, -20, 1, -10); G2L["52"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["52"]["Text"] = [[Aimlock smoothness]]; G2L["52"]["Name"] = [[Title]]; G2L["52"]["Position"] = UDim2.new(0, 60, 0, 0); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.UIPadding G2L["53"] = Instance.new("UIPadding", G2L["4f"]); G2L["53"]["PaddingTop"] = UDim.new(0, 6); G2L["53"]["PaddingRight"] = UDim.new(0, 250); G2L["53"]["PaddingLeft"] = UDim.new(0, 6); G2L["53"]["PaddingBottom"] = UDim.new(0, 6); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.Value G2L["54"] = Instance.new("TextLabel", G2L["4f"]); G2L["54"]["BorderSizePixel"] = 0; G2L["54"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["54"]["TextSize"] = 14; G2L["54"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["54"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["54"]["BackgroundTransparency"] = 1; G2L["54"]["RichText"] = true; G2L["54"]["Size"] = UDim2.new(0, 30, 1, 0); G2L["54"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["54"]["Text"] = [[100]]; G2L["54"]["Name"] = [[Value]]; G2L["54"]["Position"] = UDim2.new(3, 0, -0.2, 0); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack G2L["55"] = Instance.new("Frame", G2L["4f"]); G2L["55"]["BorderSizePixel"] = 0; G2L["55"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28); G2L["55"]["Size"] = UDim2.new(3.3, 0, -0.2, 0); G2L["55"]["Position"] = UDim2.new(0, 1, 1, 0); G2L["55"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["55"]["Name"] = [[SliderBack]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.Draggable G2L["56"] = Instance.new("Frame", G2L["55"]); G2L["56"]["BorderSizePixel"] = 0; G2L["56"]["BackgroundColor3"] = Color3.fromRGB(255, 177, 49); G2L["56"]["Size"] = UDim2.new(0.5, 0, 1, 0); G2L["56"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["56"]["Name"] = [[Draggable]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.Draggable.UICorner G2L["57"] = Instance.new("UICorner", G2L["56"]); G2L["57"]["CornerRadius"] = UDim.new(0, 9000); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.Draggable.UIStroke G2L["58"] = Instance.new("UIStroke", G2L["56"]); G2L["58"]["Color"] = Color3.fromRGB(27, 27, 27); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.UIStroke G2L["59"] = Instance.new("UIStroke", G2L["55"]); G2L["59"]["Color"] = Color3.fromRGB(27, 27, 27); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.UICorner G2L["5a"] = Instance.new("UICorner", G2L["55"]); G2L["5a"]["CornerRadius"] = UDim.new(0, 9000); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.LocalScript G2L["5b"] = Instance.new("LocalScript", G2L["55"]); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.Trigger G2L["5c"] = Instance.new("TextButton", G2L["55"]); G2L["5c"]["BorderSizePixel"] = 0; G2L["5c"]["TextSize"] = 14; G2L["5c"]["TextColor3"] = Color3.fromRGB(0, 0, 0); G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["5c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal); G2L["5c"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["5c"]["BackgroundTransparency"] = 1; G2L["5c"]["Name"] = [[Trigger]]; G2L["5c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["5c"]["Text"] = [[ ]]; G2L["5c"]["Position"] = UDim2.new(0, 0, -0.2, 0); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.Output G2L["5d"] = Instance.new("NumberValue", G2L["55"]); G2L["5d"]["Name"] = [[Output]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.UICorner G2L["5e"] = Instance.new("UICorner", G2L["3a"]); G2L["5e"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize G2L["5f"] = Instance.new("Frame", G2L["3a"]); G2L["5f"]["BorderSizePixel"] = 0; G2L["5f"]["BackgroundColor3"] = Color3.fromRGB(73, 30, 3); G2L["5f"]["AnchorPoint"] = Vector2.new(0, 0.1); G2L["5f"]["Size"] = UDim2.new(0.96979, 0, 0, 35); G2L["5f"]["Position"] = UDim2.new(0, 5, 0, 230); G2L["5f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["5f"]["Name"] = [[ExpanderSize]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.UICorner G2L["60"] = Instance.new("UICorner", G2L["5f"]); G2L["60"]["CornerRadius"] = UDim.new(0, 4); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.UIStroke G2L["61"] = Instance.new("UIStroke", G2L["5f"]); G2L["61"]["Color"] = Color3.fromRGB(163, 69, 6); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.Title G2L["62"] = Instance.new("TextLabel", G2L["5f"]); G2L["62"]["BorderSizePixel"] = 0; G2L["62"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["62"]["TextSize"] = 14; G2L["62"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["62"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["62"]["BackgroundTransparency"] = 1; G2L["62"]["RichText"] = true; G2L["62"]["Size"] = UDim2.new(1, -20, 1, -10); G2L["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["62"]["Text"] = [[Hitbox Size]]; G2L["62"]["Name"] = [[Title]]; G2L["62"]["Position"] = UDim2.new(0, 60, 0, 0); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.UIPadding G2L["63"] = Instance.new("UIPadding", G2L["5f"]); G2L["63"]["PaddingTop"] = UDim.new(0, 6); G2L["63"]["PaddingRight"] = UDim.new(0, 250); G2L["63"]["PaddingLeft"] = UDim.new(0, 6); G2L["63"]["PaddingBottom"] = UDim.new(0, 6); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.Value G2L["64"] = Instance.new("TextLabel", G2L["5f"]); G2L["64"]["BorderSizePixel"] = 0; G2L["64"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["64"]["TextSize"] = 14; G2L["64"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal); G2L["64"]["TextColor3"] = Color3.fromRGB(255, 255, 255); G2L["64"]["BackgroundTransparency"] = 1; G2L["64"]["RichText"] = true; G2L["64"]["Size"] = UDim2.new(0, 30, 1, 0); G2L["64"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["64"]["Text"] = [[100]]; G2L["64"]["Name"] = [[Value]]; G2L["64"]["Position"] = UDim2.new(3, 0, -0.2, 0); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack G2L["65"] = Instance.new("Frame", G2L["5f"]); G2L["65"]["BorderSizePixel"] = 0; G2L["65"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28); G2L["65"]["Size"] = UDim2.new(3.3, 0, -0.2, 0); G2L["65"]["Position"] = UDim2.new(0, 1, 1, 0); G2L["65"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["65"]["Name"] = [[SliderBack]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.Draggable G2L["66"] = Instance.new("Frame", G2L["65"]); G2L["66"]["BorderSizePixel"] = 0; G2L["66"]["BackgroundColor3"] = Color3.fromRGB(255, 177, 49); G2L["66"]["Size"] = UDim2.new(0.5, 0, 1, 0); G2L["66"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["66"]["Name"] = [[Draggable]]; -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.Draggable.UICorner G2L["67"] = Instance.new("UICorner", G2L["66"]); G2L["67"]["CornerRadius"] = UDim.new(0, 9000); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.Draggable.UIStroke G2L["68"] = Instance.new("UIStroke", G2L["66"]); G2L["68"]["Color"] = Color3.fromRGB(27, 27, 27); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.UIStroke G2L["69"] = Instance.new("UIStroke", G2L["65"]); G2L["69"]["Color"] = Color3.fromRGB(27, 27, 27); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.UICorner G2L["6a"] = Instance.new("UICorner", G2L["65"]); G2L["6a"]["CornerRadius"] = UDim.new(0, 9000); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.LocalScript G2L["6b"] = Instance.new("LocalScript", G2L["65"]); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.Trigger G2L["6c"] = Instance.new("TextButton", G2L["65"]); G2L["6c"]["BorderSizePixel"] = 0; G2L["6c"]["TextSize"] = 14; G2L["6c"]["TextColor3"] = Color3.fromRGB(0, 0, 0); G2L["6c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["6c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal); G2L["6c"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["6c"]["BackgroundTransparency"] = 1; G2L["6c"]["Name"] = [[Trigger]]; G2L["6c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["6c"]["Text"] = [[ ]]; G2L["6c"]["Position"] = UDim2.new(0, 0, -0.2, 0); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.Output G2L["6d"] = Instance.new("NumberValue", G2L["65"]); G2L["6d"]["Name"] = [[Output]]; -- StarterGui.MyLibrary.Main.ContentContainer.UICorner G2L["6e"] = Instance.new("UICorner", G2L["c"]); -- StarterGui.MyLibrary.Main.LocalScript G2L["6f"] = Instance.new("LocalScript", G2L["2"]); -- StarterGui.MyLibrary.Main.Navigation G2L["70"] = Instance.new("Frame", G2L["2"]); G2L["70"]["BorderSizePixel"] = 0; G2L["70"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59); G2L["70"]["Size"] = UDim2.new(0, 70, 0, 202); G2L["70"]["Position"] = UDim2.new(-0.235, 0, 0.2475, 0); G2L["70"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["70"]["Name"] = [[Navigation]]; -- StarterGui.MyLibrary.Main.Navigation.UICorner G2L["71"] = Instance.new("UICorner", G2L["70"]); G2L["71"]["CornerRadius"] = UDim.new(0, 9); -- StarterGui.MyLibrary.Main.Navigation.DropShadowHolder G2L["72"] = Instance.new("Frame", G2L["70"]); G2L["72"]["ZIndex"] = 0; G2L["72"]["BorderSizePixel"] = 0; G2L["72"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["72"]["Name"] = [[DropShadowHolder]]; G2L["72"]["BackgroundTransparency"] = 1; -- StarterGui.MyLibrary.Main.Navigation.DropShadowHolder.DropShadow G2L["73"] = Instance.new("ImageLabel", G2L["72"]); G2L["73"]["ZIndex"] = 0; G2L["73"]["BorderSizePixel"] = 0; G2L["73"]["SliceCenter"] = Rect.new(49, 49, 450, 450); G2L["73"]["ScaleType"] = Enum.ScaleType.Slice; G2L["73"]["ImageTransparency"] = 0.5; G2L["73"]["ImageColor3"] = Color3.fromRGB(0, 0, 0); G2L["73"]["AnchorPoint"] = Vector2.new(0.5, 0.5); G2L["73"]["Image"] = [[rbxassetid://6014261993]]; G2L["73"]["Size"] = UDim2.new(1, 47, 1, 47); G2L["73"]["BackgroundTransparency"] = 1; G2L["73"]["Name"] = [[DropShadow]]; G2L["73"]["Position"] = UDim2.new(0.5, 0, 0.5, 0); -- StarterGui.MyLibrary.Main.Navigation.Aimbot G2L["74"] = Instance.new("ImageButton", G2L["70"]); G2L["74"]["BorderSizePixel"] = 0; G2L["74"]["BackgroundColor3"] = Color3.fromRGB(0, 10, 64); G2L["74"]["ImageColor3"] = Color3.fromRGB(255, 72, 40); G2L["74"]["AnchorPoint"] = Vector2.new(0, 1); G2L["74"]["Image"] = [[rbxassetid://10709781460]]; G2L["74"]["Size"] = UDim2.new(0, 40, 0, 40); G2L["74"]["BackgroundTransparency"] = 1; G2L["74"]["Name"] = [[Aimbot]]; G2L["74"]["BorderColor3"] = Color3.fromRGB(255, 72, 40); G2L["74"]["Position"] = UDim2.new(0.20894, 0, 0.25347, 0); -- StarterGui.MyLibrary.Main.Navigation.Aimbot.ToggleAimbotTab G2L["75"] = Instance.new("LocalScript", G2L["74"]); G2L["75"]["Name"] = [[ToggleAimbotTab]]; -- StarterGui.MyLibrary.Main.Navigation.Aimbot.Sound G2L["76"] = Instance.new("Sound", G2L["74"]); G2L["76"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["76"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.Navigation.Visuals G2L["77"] = Instance.new("ImageButton", G2L["70"]); G2L["77"]["BorderSizePixel"] = 0; G2L["77"]["BackgroundColor3"] = Color3.fromRGB(0, 10, 64); G2L["77"]["ImageColor3"] = Color3.fromRGB(255, 72, 40); G2L["77"]["Image"] = [[rbxassetid://10747373426]]; G2L["77"]["Size"] = UDim2.new(0, 40, 0, 40); G2L["77"]["BackgroundTransparency"] = 1; G2L["77"]["Name"] = [[Visuals]]; G2L["77"]["BorderColor3"] = Color3.fromRGB(255, 72, 40); G2L["77"]["Position"] = UDim2.new(0.20894, 0, 0.39704, 0); -- StarterGui.MyLibrary.Main.Navigation.Visuals.ToggleVisualsTab G2L["78"] = Instance.new("LocalScript", G2L["77"]); G2L["78"]["Name"] = [[ToggleVisualsTab]]; -- StarterGui.MyLibrary.Main.Navigation.Visuals.Sound G2L["79"] = Instance.new("Sound", G2L["77"]); G2L["79"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["79"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Main.Navigation.Info G2L["7a"] = Instance.new("ImageButton", G2L["70"]); G2L["7a"]["BorderSizePixel"] = 0; G2L["7a"]["BackgroundColor3"] = Color3.fromRGB(0, 10, 64); G2L["7a"]["ImageColor3"] = Color3.fromRGB(255, 72, 40); G2L["7a"]["Image"] = [[rbxassetid://10734950309]]; G2L["7a"]["Size"] = UDim2.new(0, 40, 0, 40); G2L["7a"]["BackgroundTransparency"] = 1; G2L["7a"]["Name"] = [[Info]]; G2L["7a"]["BorderColor3"] = Color3.fromRGB(255, 72, 40); G2L["7a"]["Position"] = UDim2.new(0.20894, 0, 0.7545, 0); -- StarterGui.MyLibrary.Main.Navigation.Info.ToggleCreditsTab G2L["7b"] = Instance.new("LocalScript", G2L["7a"]); G2L["7b"]["Name"] = [[ToggleCreditsTab]]; -- StarterGui.MyLibrary.Main.Navigation.Info.Sound G2L["7c"] = Instance.new("Sound", G2L["7a"]); G2L["7c"]["RollOffMode"] = Enum.RollOffMode.InverseTapered; G2L["7c"]["SoundId"] = [[rbxassetid://7107162229]]; -- StarterGui.MyLibrary.Loader G2L["7d"] = Instance.new("Frame", G2L["1"]); G2L["7d"]["Visible"] = false; G2L["7d"]["BorderSizePixel"] = 0; G2L["7d"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59); G2L["7d"]["Size"] = UDim2.new(0, 310, 0, 158); G2L["7d"]["Position"] = UDim2.new(0.5, 0, 0.5, 0); G2L["7d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["7d"]["Name"] = [[Loader]]; -- StarterGui.MyLibrary.Loader.Topbar2 G2L["7e"] = Instance.new("Frame", G2L["7d"]); G2L["7e"]["BorderSizePixel"] = 0; G2L["7e"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23); G2L["7e"]["Size"] = UDim2.new(0, 310, 0, 42); G2L["7e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["7e"]["Name"] = [[Topbar2]]; -- StarterGui.MyLibrary.Loader.Topbar2.UICorner G2L["7f"] = Instance.new("UICorner", G2L["7e"]); -- StarterGui.MyLibrary.Loader.Topbar2.Bottom G2L["80"] = Instance.new("Frame", G2L["7e"]); G2L["80"]["BorderSizePixel"] = 0; G2L["80"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23); G2L["80"]["Size"] = UDim2.new(0, 310, 0, 18); G2L["80"]["Position"] = UDim2.new(0, 0, 0.57576, 0); G2L["80"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["80"]["Name"] = [[Bottom]]; -- StarterGui.MyLibrary.Loader.Topbar2.Bottom.Frame G2L["81"] = Instance.new("Frame", G2L["80"]); G2L["81"]["BorderSizePixel"] = 0; G2L["81"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["81"]["Size"] = UDim2.new(0, 310, 0, 1); G2L["81"]["Position"] = UDim2.new(0, 0, 1, 0); G2L["81"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); -- StarterGui.MyLibrary.Loader.Topbar2.Title G2L["82"] = Instance.new("TextLabel", G2L["7e"]); G2L["82"]["TextWrapped"] = true; G2L["82"]["Active"] = true; G2L["82"]["ZIndex"] = 15151; G2L["82"]["BorderSizePixel"] = 0; G2L["82"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["82"]["TextSize"] = 24; G2L["82"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal); G2L["82"]["TextColor3"] = Color3.fromRGB(255, 250, 250); G2L["82"]["BackgroundTransparency"] = 1; G2L["82"]["Size"] = UDim2.new(0, 156, 0, 35); G2L["82"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["82"]["Text"] = [[Keta           .xyz]]; G2L["82"]["Name"] = [[Title]]; G2L["82"]["Position"] = UDim2.new(-0.02077, 0, 0.06341, 0); -- StarterGui.MyLibrary.Loader.Topbar2.Title.Text G2L["83"] = Instance.new("TextLabel", G2L["82"]); G2L["83"]["TextWrapped"] = true; G2L["83"]["Active"] = true; G2L["83"]["ZIndex"] = 15151; G2L["83"]["BorderSizePixel"] = 0; G2L["83"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["83"]["TextSize"] = 25; G2L["83"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal); G2L["83"]["TextColor3"] = Color3.fromRGB(255, 72, 40); G2L["83"]["BackgroundTransparency"] = 1; G2L["83"]["Size"] = UDim2.new(0, 130, 0, 35); G2L["83"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["83"]["Text"] = [[ware]]; G2L["83"]["Name"] = [[Text]]; G2L["83"]["Position"] = UDim2.new(0.12314, 0, -0.01254, 0); -- StarterGui.MyLibrary.Loader.Topbar2.Minimize G2L["84"] = Instance.new("ImageButton", G2L["7e"]); G2L["84"]["BorderSizePixel"] = 0; G2L["84"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["84"]["Image"] = [[rbxassetid://10734895530]]; G2L["84"]["Size"] = UDim2.new(0, 25, 0, 25); G2L["84"]["BackgroundTransparency"] = 1; G2L["84"]["Name"] = [[Minimize]]; G2L["84"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["84"]["Position"] = UDim2.new(0.89, 0, 0.19512, 0); -- StarterGui.MyLibrary.Loader.Topbar2.Minimize.LocalScript G2L["85"] = Instance.new("LocalScript", G2L["84"]); -- StarterGui.MyLibrary.Loader.UICorner G2L["86"] = Instance.new("UICorner", G2L["7d"]); -- StarterGui.MyLibrary.Loader.DropShadowHolder G2L["87"] = Instance.new("Frame", G2L["7d"]); G2L["87"]["ZIndex"] = 0; G2L["87"]["BorderSizePixel"] = 0; G2L["87"]["Size"] = UDim2.new(1, 0, 1, 0); G2L["87"]["Name"] = [[DropShadowHolder]]; G2L["87"]["BackgroundTransparency"] = 1; -- StarterGui.MyLibrary.Loader.DropShadowHolder.DropShadow G2L["88"] = Instance.new("ImageLabel", G2L["87"]); G2L["88"]["ZIndex"] = 0; G2L["88"]["BorderSizePixel"] = 0; G2L["88"]["SliceCenter"] = Rect.new(49, 49, 450, 450); G2L["88"]["ScaleType"] = Enum.ScaleType.Slice; G2L["88"]["ImageTransparency"] = 0.5; G2L["88"]["ImageColor3"] = Color3.fromRGB(0, 0, 0); G2L["88"]["AnchorPoint"] = Vector2.new(0.5, 0.5); G2L["88"]["Image"] = [[rbxassetid://6014261993]]; G2L["88"]["Size"] = UDim2.new(1, 47, 1, 47); G2L["88"]["BackgroundTransparency"] = 1; G2L["88"]["Name"] = [[DropShadow]]; G2L["88"]["Position"] = UDim2.new(0.5, 0, 0.5, 0); -- StarterGui.MyLibrary.Loader.Container G2L["89"] = Instance.new("Frame", G2L["7d"]); G2L["89"]["BorderSizePixel"] = 0; G2L["89"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255); G2L["89"]["Size"] = UDim2.new(0, 277, 0, 77); G2L["89"]["Position"] = UDim2.new(0.07419, 0, 0.372, 0); G2L["89"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["89"]["Name"] = [[Container]]; G2L["89"]["BackgroundTransparency"] = 1; -- StarterGui.MyLibrary.Loader.Container.Loginb G2L["8a"] = Instance.new("TextBox", G2L["89"]); G2L["8a"]["TextColor3"] = Color3.fromRGB(255, 72, 40); G2L["8a"]["BorderSizePixel"] = 0; G2L["8a"]["TextWrapped"] = true; G2L["8a"]["TextSize"] = 25; G2L["8a"]["Name"] = [[Loginb]]; G2L["8a"]["BackgroundColor3"] = Color3.fromRGB(59, 59, 59); G2L["8a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Ubuntu.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal); G2L["8a"]["Size"] = UDim2.new(0, 205, 0, 34); G2L["8a"]["Position"] = UDim2.new(-0.00361, 0, 0.23377, 0); G2L["8a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0); G2L["8a"]["Text"] = [[License]]; -- StarterGui.MyLibrary.Loader.Container.Loginb.Enter G2L["8b"] = Instance.new("ImageButton", G2L["8a"]); G2L["8b"]["BorderSizePixel"] = 0; G2L["8b"]["BackgroundColor3"] = Color3.fromRGB(255, 72, 40); G2L["8b"]["ImageColor3"] = Color3.fromRGB(255, 72, 40); G2L["8b"]["Image"] = [[rbxassetid://10734923549]]; G2L["8b"]["Size"] = UDim2.new(0, 32, 0, 32); G2L["8b"]["BackgroundTransparency"] = 1; G2L["8b"]["Name"] = [[Enter]]; G2L["8b"]["BorderColor3"] = Color3.fromRGB(255, 72, 40); G2L["8b"]["Position"] = UDim2.new(1.08076, 0, -0.00494, 0); -- StarterGui.MyLibrary.Loader.Container.Loginb.Enter.LocalScript G2L["8c"] = Instance.new("LocalScript", G2L["8b"]); -- StarterGui.MyLibrary.Loader.Container.Loginb.Enter.UICorner G2L["8d"] = Instance.new("UICorner", G2L["8b"]); -- StarterGui.MyLibrary.Loader.Container.Loginb.UIStroke G2L["8e"] = Instance.new("UIStroke", G2L["8a"]); G2L["8e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border; G2L["8e"]["Color"] = Color3.fromRGB(255, 72, 40); -- StarterGui.MyLibrary.Loader.Container.Loginb.UICorner G2L["8f"] = Instance.new("UICorner", G2L["8a"]); -- StarterGui.MyLibrary.Loader.1 G2L["90"] = Instance.new("LocalScript", G2L["7d"]); G2L["90"]["Name"] = [[1]]; -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Chams.LocalScript local function C_13() local script = G2L["13"]; local sfx = script.Parent.Sound local Button = script.Parent local startSize = UDim2.new(0, 275,0.0075, 30) local hoverSize = UDim2.new(0, 280,0.0085, 33) local textlbl = script.Parent.Parent.Parent.Parent.ContentContainer.Display.ImageLabel.TextLabel local icon = script.Parent.Parent.Parent.Parent.ContentContainer.Display.ImageLabel script.Parent.MouseEnter:Connect(function() script.Parent:TweenSize(hoverSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseLeave:Connect(function() script.Parent:TweenSize(startSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseButton1Click:Connect(function() sfx:Play() -- Set the background color to a dark green Button.BackgroundColor3 = Color3.fromRGB(0, 95, 11) -- Set the stroke color to a lighter green Button.UIStroke.Color = Color3.fromRGB(0, 177, 18) ---// Function below here -> textlbl.Text = "Enabled : Chams" icon.Image = "rbxassetid://17898187961" local Players = game:GetService("Players"):GetChildren() local RunService = game:GetService("RunService") local highlight = Instance.new("Highlight") highlight.Name = "Highlights" for i, v in pairs(Players) do repeat wait() until v.Character if not v.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then local highlightClone = highlight:Clone() highlightClone.Adornee = v.Character highlightClone.Parent = v.Character:FindFirstChild("HumanoidRootPart") highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop highlightClone.Name = "Highlight" end end game.Players.PlayerAdded:Connect(function(player) repeat wait() until player.Character if not player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then local highlightClone = highlight:Clone() highlightClone.Adornee = player.Character highlightClone.Parent = player.Character:FindFirstChild("HumanoidRootPart") highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop highlightClone.Name = "Highlight" end end) game.Players.PlayerRemoving:Connect(function (playerremoved) playerRemoved.Character:FindFirstChild("HumanoidRootPart").Highlight:Destroy() end) RunService.Heartbeat:Connect(function () for i, v in pairs(Players) do repeat wait() until v.Character if not v.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then local highlightClone = highlight:Clone() highlightClone.Adornee = v.Character highlightClone.Parent = v.Character:FindFirstChild("HumanoidRootPart") highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop highlightClone.Name = "Highlight" task.wait() end end end) end) end; task.spawn(C_13); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.NameESP.LocalScript local function C_1a() local script = G2L["1a"]; local sfx = script.Parent.Sound local Button = script.Parent local startSize = UDim2.new(0, 275,0.0075, 30) local hoverSize = UDim2.new(0, 280,0.0085, 33) local textlbl = script.Parent.Parent.Parent.Parent.ContentContainer.Display.ImageLabel.TextLabel local icon = script.Parent.Parent.Parent.Parent.ContentContainer.Display.ImageLabel script.Parent.MouseEnter:Connect(function() script.Parent:TweenSize(hoverSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseLeave:Connect(function() script.Parent:TweenSize(startSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseButton1Click:Connect(function() sfx:Play() -- Set the background color to a dark green Button.BackgroundColor3 = Color3.fromRGB(0, 95, 11) -- Set the stroke color to a lighter green Button.UIStroke.Color = Color3.fromRGB(0, 177, 18) ---// Function below here -> textlbl.Text = "Enabled : Name ESP" icon.Image = "rbxassetid://17898232917" local function API_Check() if Drawing == nil then return "No" else return "Yes" end end local Find_Required = API_Check() if Find_Required == "No" then return end local Players = game:GetService("Players") local RunService = game:GetService("RunService") local UserInputService = game:GetService("UserInputService") local Camera = workspace.CurrentCamera local Typing = false _G.SendNotifications = true   -- If set to true then the script would notify you frequently on any changes applied and when loaded / errored. (If a game can detect this, it is recommended to set it to false) _G.DefaultSettings = false   -- If set to true then the ESP script would run with default settings regardless of any changes you made. _G.TeamCheck = false   -- If set to true then the script would create ESP only for the enemy team members. _G.ESPVisible = true   -- If set to true then the ESP will be visible and vice versa. _G.TextColor = Color3.fromRGB(255, 80, 10)   -- The color that the boxes would appear as. _G.TextSize = 14   -- The size of the text. _G.Center = true   -- If set to true then the script would be located at the center of the label. _G.Outline = true   -- If set to true then the text would have an outline. _G.OutlineColor = Color3.fromRGB(0, 0, 0)   -- The outline color of the text. _G.TextTransparency = 0.7   -- The transparency of the text. _G.TextFont = Drawing.Fonts.UI   -- The font of the text. (UI, System, Plex, Monospace) _G.DisableKey = Enum.KeyCode.Q   -- The key that disables / enables the ESP. local function CreateESP() for _, v in next, Players:GetPlayers() do if v.Name ~= Players.LocalPlayer.Name then local ESP = Drawing.new("Text") RunService.RenderStepped:Connect(function() if workspace:FindFirstChild(v.Name) ~= nil and workspace[v.Name]:FindFirstChild("HumanoidRootPart") ~= nil then local Vector, OnScreen = Camera:WorldToViewportPoint(workspace[v.Name]:WaitForChild("Head", math.huge).Position) ESP.Size = _G.TextSize ESP.Center = _G.Center ESP.Outline = _G.Outline ESP.OutlineColor = _G.OutlineColor ESP.Color = _G.TextColor ESP.Transparency = _G.TextTransparency ESP.Font = _G.TextFont if OnScreen == true then local Part1 = workspace:WaitForChild(v.Name, math.huge):WaitForChild("HumanoidRootPart", math.huge).Position local Part2 = workspace:WaitForChild(Players.LocalPlayer.Name, math.huge):WaitForChild("HumanoidRootPart", math.huge).Position or 0 local Dist = (Part1 - Part2).Magnitude ESP.Position = Vector2.new(Vector.X, Vector.Y - 25) ESP.Text = ("("..tostring(math.floor(tonumber(Dist)))..") "..v.Name.." ["..workspace[v.Name].Humanoid.Health.."]") if _G.TeamCheck == true then if Players.LocalPlayer.Team ~= v.Team then ESP.Visible = _G.ESPVisible else ESP.Visible = false end else ESP.Visible = _G.ESPVisible end else ESP.Visible = false end else ESP.Visible = false end end) Players.PlayerRemoving:Connect(function() ESP.Visible = false end) end end Players.PlayerAdded:Connect(function(Player) Player.CharacterAdded:Connect(function(v) if v.Name ~= Players.LocalPlayer.Name then local ESP = Drawing.new("Text") RunService.RenderStepped:Connect(function() if workspace:FindFirstChild(v.Name) ~= nil and workspace[v.Name]:FindFirstChild("HumanoidRootPart") ~= nil then local Vector, OnScreen = Camera:WorldToViewportPoint(workspace[v.Name]:WaitForChild("Head", math.huge).Position) ESP.Size = _G.TextSize ESP.Center = _G.Center ESP.Outline = _G.Outline ESP.OutlineColor = _G.OutlineColor ESP.Color = _G.TextColor ESP.Transparency = _G.TextTransparency if OnScreen == true then local Part1 = workspace:WaitForChild(v.Name, math.huge):WaitForChild("HumanoidRootPart", math.huge).Position local Part2 = workspace:WaitForChild(Players.LocalPlayer.Name, math.huge):WaitForChild("HumanoidRootPart", math.huge).Position or 0 local Dist = (Part1 - Part2).Magnitude ESP.Position = Vector2.new(Vector.X, Vector.Y - 25) ESP.Text = ("("..tostring(math.floor(tonumber(Dist)))..") "..v.Name.." ["..workspace[v.Name].Humanoid.Health.."]") if _G.TeamCheck == true then if Players.LocalPlayer.Team ~= Player.Team then ESP.Visible = _G.ESPVisible else ESP.Visible = false end else ESP.Visible = _G.ESPVisible end else ESP.Visible = false end else ESP.Visible = false end end) Players.PlayerRemoving:Connect(function() ESP.Visible = false end) end end) end) end if _G.DefaultSettings == true then _G.TeamCheck = false _G.ESPVisible = true _G.TextColor = Color3.fromRGB(40, 90, 255) _G.TextSize = 14 _G.Center = true _G.Outline = false _G.OutlineColor = Color3.fromRGB(0, 0, 0) _G.DisableKey = Enum.KeyCode.Q _G.TextTransparency = 0.75 end UserInputService.TextBoxFocused:Connect(function() Typing = true end) UserInputService.TextBoxFocusReleased:Connect(function() Typing = false end) UserInputService.InputBegan:Connect(function(Input) if Input.KeyCode == _G.DisableKey and Typing == false then _G.ESPVisible = not _G.ESPVisible if _G.SendNotifications == true then end end end) local Success, Errored = pcall(function() CreateESP() end) if Success and not Errored then if _G.SendNotifications == true then end elseif Errored and not Success then if _G.SendNotifications == true then end warn(Errored) end end) end; task.spawn(C_1a); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.Tracers.LocalScript local function C_21() local script = G2L["21"]; local sfx = script.Parent.Sound local Button = script.Parent local startSize = UDim2.new(0, 275,0.0075, 30) local hoverSize = UDim2.new(0, 280,0.0085, 33) script.Parent.MouseEnter:Connect(function() script.Parent:TweenSize(hoverSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseLeave:Connect(function() script.Parent:TweenSize(startSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseButton1Click:Connect(function() sfx:Play() -- Set the background color to a dark green Button.BackgroundColor3 = Color3.fromRGB(0, 95, 11) -- Set the stroke color to a lighter green Button.UIStroke.Color = Color3.fromRGB(0, 177, 18) ---// Function below here -> local function API_Check() if Drawing == nil then return "No" else return "Yes" end end local Find_Required = API_Check() if Find_Required == "No" then return end local RunService = game:GetService("RunService") local Players = game:GetService("Players") local Camera = game:GetService("Workspace").CurrentCamera local UserInputService = game:GetService("UserInputService") local TestService = game:GetService("TestService") local Typing = false _G.SendNotifications = true   -- If set to true then the script would notify you frequently on any changes applied and when loaded / errored. (If a game can detect this, it is recommended to set it to false) _G.DefaultSettings = false   -- If set to true then the tracer script would run with default settings regardless of any changes you made. _G.TeamCheck = false   -- If set to true then the script would create tracers only for the enemy team members. --[!]-- ONLY ONE OF THESE VALUES SHOULD BE SET TO TRUE TO NOT ERROR THE SCRIPT --[!]-- _G.FromMouse = false   -- If set to true, the tracers will come from the position of your mouse curson on your screen. _G.FromCenter = false   -- If set to true, the tracers will come from the center of your screen. _G.FromBottom = true   -- If set to true, the tracers will come from the bottom of your screen. _G.TracersVisible = true   -- If set to true then the tracers will be visible and vice versa. _G.TracerColor = Color3.fromRGB(255, 80, 10)   -- The color that the tracers would appear as. _G.TracerThickness = 1   -- The thickness of the tracers. _G.TracerTransparency = 0.7   -- The transparency of the tracers. _G.ModeSkipKey = Enum.KeyCode.E   -- The key that changes between modes that indicate where will the tracers come from. _G.DisableKey = Enum.KeyCode.Q   -- The key that disables / enables the tracers. local function CreateTracers() for _, v in next, Players:GetPlayers() do if v.Name ~= game.Players.LocalPlayer.Name then local TracerLine = Drawing.new("Line") RunService.RenderStepped:Connect(function() if workspace:FindFirstChild(v.Name) ~= nil and workspace[v.Name]:FindFirstChild("HumanoidRootPart") ~= nil then local HumanoidRootPart_Position, HumanoidRootPart_Size = workspace[v.Name].HumanoidRootPart.CFrame, workspace[v.Name].HumanoidRootPart.Size * 1 local Vector, OnScreen = Camera:WorldToViewportPoint(HumanoidRootPart_Position * CFrame.new(0, -HumanoidRootPart_Size.Y, 0).p) TracerLine.Thickness = _G.TracerThickness TracerLine.Transparency = _G.TracerTransparency TracerLine.Color = _G.TracerColor if _G.FromMouse == true and _G.FromCenter == false and _G.FromBottom == false then TracerLine.From = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) elseif _G.FromMouse == false and _G.FromCenter == true and _G.FromBottom == false then TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2) elseif _G.FromMouse == false and _G.FromCenter == false and _G.FromBottom == true then TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) end if OnScreen == true  then TracerLine.To = Vector2.new(Vector.X, Vector.Y) if _G.TeamCheck == true then if Players.LocalPlayer.Team ~= v.Team then TracerLine.Visible = _G.TracersVisible else TracerLine.Visible = false end else TracerLine.Visible = _G.TracersVisible end else TracerLine.Visible = false end else TracerLine.Visible = false end end) Players.PlayerRemoving:Connect(function() TracerLine.Visible = false end) end end Players.PlayerAdded:Connect(function(Player) Player.CharacterAdded:Connect(function(v) if v.Name ~= game.Players.LocalPlayer.Name then local TracerLine = Drawing.new("Line") RunService.RenderStepped:Connect(function() if workspace:FindFirstChild(v.Name) ~= nil and workspace[v.Name]:FindFirstChild("HumanoidRootPart") ~= nil then local HumanoidRootPart_Position, HumanoidRootPart_Size = workspace[v.Name].HumanoidRootPart.CFrame, workspace[v.Name].HumanoidRootPart.Size * 1 local Vector, OnScreen = Camera:WorldToViewportPoint(HumanoidRootPart_Position * CFrame.new(0, -HumanoidRootPart_Size.Y, 0).p) TracerLine.Thickness = _G.TracerThickness TracerLine.Transparency = _G.TracerTransparency TracerLine.Color = _G.TracerColor if _G.FromMouse == true and _G.FromCenter == false and _G.FromBottom == false then TracerLine.From = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) elseif _G.FromMouse == false and _G.FromCenter == true and _G.FromBottom == false then TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2) elseif _G.FromMouse == false and _G.FromCenter == false and _G.FromBottom == true then TracerLine.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) end if OnScreen == true  then TracerLine.To = Vector2.new(Vector.X, Vector.Y) if _G.TeamCheck == true then if Players.LocalPlayer.Team ~= Player.Team then TracerLine.Visible = _G.TracersVisible else TracerLine.Visible = false end else TracerLine.Visible = _G.TracersVisible end else TracerLine.Visible = false end else TracerLine.Visible = false end end) Players.PlayerRemoving:Connect(function() TracerLine.Visible = false end) end end) end) end UserInputService.TextBoxFocused:Connect(function() Typing = true end) UserInputService.TextBoxFocusReleased:Connect(function() Typing = false end) UserInputService.InputBegan:Connect(function(Input) if Input.KeyCode == _G.ModeSkipKey and Typing == false then if _G.FromMouse == true and _G.FromCenter == false and _G.FromBottom == false and _G.TracersVisible == true then _G.FromCenter = false _G.FromBottom = true _G.FromMouse = false if _G.SendNotifications == true then end elseif _G.FromMouse == false and _G.FromCenter == false and _G.FromBottom == true and _G.TracersVisible == true then _G.FromCenter = true _G.FromBottom = false _G.FromMouse = false elseif _G.FromMouse == false and _G.FromCenter == true and _G.FromBottom == false and _G.TracersVisible == true then _G.FromCenter = true _G.FromBottom = false _G.FromMouse = true end elseif Input.KeyCode == _G.DisableKey and Typing == false then _G.TracersVisible = not _G.TracersVisible if _G.SendNotifications == true then game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "Xanta ESP"; Text = "visibility is now set to "..tostring(_G.TracersVisible).."."; Duration = 5; }) end end end) if _G.DefaultSettings == true then _G.TeamCheck = false _G.FromMouse = false _G.FromCenter = false _G.FromBottom = true _G.TracersVisible = true _G.TracerColor = Color3.fromRGB(40, 90, 255) _G.TracerThickness = 1 _G.TracerTransparency = 0.5 _G.ModeSkipKey = Enum.KeyCode.E _G.DisableKey = Enum.KeyCode.Q end local Success, Errored = pcall(function() CreateTracers() end) if Success and not Errored then if _G.SendNotifications == true then end elseif Errored and not Success then if _G.SendNotifications == true then end end end) end; task.spawn(C_21); -- StarterGui.MyLibrary.Main.ContentContainer.VisualTab.ShowFOV.LocalScript local function C_28() local script = G2L["28"]; local sfx = script.Parent.Sound local Button = script.Parent local startSize = UDim2.new(0, 275,0.0075, 30) local hoverSize = UDim2.new(0, 280,0.0085, 33) local value = script.Parent.Value script.Parent.MouseEnter:Connect(function() script.Parent:TweenSize(hoverSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseLeave:Connect(function() script.Parent:TweenSize(startSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseButton1Click:Connect(function() sfx:Play() -- Set the background color to a dark green Button.BackgroundColor3 = Color3.fromRGB(0, 95, 11) -- Set the stroke color to a lighter green Button.UIStroke.Color = Color3.fromRGB(0, 177, 18) end) end; task.spawn(C_28); -- StarterGui.MyLibrary.Main.ContentContainer.CreditTab.Title.Dizzy.LocalScript local function C_37() local script = G2L["37"]; local TextButton = script.Parent local text = "Text to be copied" TextButton.MouseButton1Click:Connect(function() local http = game:GetService("HttpService") local url = "https://roblox.github.io/clipboard-redirect/?text=".. http:UrlEncode(text) local browser = Instance.new("BrowserFrame") browser.Parent = game.CoreGui browser.Size = UDim2.new(0, 400, 0, 200) browser.Url = url end) end; task.spawn(C_37); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotBtn.LocalScript local function C_40() local script = G2L["40"]; local sfx = script.Parent.Sound local Button = script.Parent local SmoothnessValue = script.Parent.Parent.AimbotSmoothnessSLider.SliderBack.Output local startSize = UDim2.new(0, 275,0.0075, 30) local hoverSize = UDim2.new(0, 280,0.0085, 33) script.Parent.MouseEnter:Connect(function() script.Parent:TweenSize(hoverSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseLeave:Connect(function() script.Parent:TweenSize(startSize,Enum.EasingDirection.Out,Enum.EasingStyle.Sine,0.25,true) end) script.Parent.MouseButton1Click:Connect(function() sfx:Play() -- Set the background color to a dark green Button.BackgroundColor3 = Color3.fromRGB(0, 95, 11) -- Set the stroke color to a lighter green Button.UIStroke.Color = Color3.fromRGB(0, 177, 18) ---// Function below here -> getgenv().Prediction = SmoothnessValue.Value getgenv().AimPart = "HumanoidRootPart" getgenv().Key = "e" getgenv().DisableKey = "P" getgenv().FOV = true getgenv().ShowFOV = true getgenv().FOVSize = 100 --// Variables (Service) local Players = game:GetService("Players") local RS = game:GetService("RunService") local WS = game:GetService("Workspace") local GS = game:GetService("GuiService") local SG = game:GetService("StarterGui") --// Variables (regular) local LP = Players.LocalPlayer local Mouse = LP:GetMouse() local Camera = WS.CurrentCamera local GetGuiInset = GS.GetGuiInset local AimlockState = true local Locked local Victim local SelectedKey = getgenv().Key local SelectedDisableKey = getgenv().DisableKey --// Notification function function Notify(tx) SG:SetCore("SendNotification", { Title = "Ketaware", Text = tx, Duration = 5 }) end --// Check if aimlock is loaded if getgenv().Loaded == true then Notify("you already pressed this button.") return end getgenv().Loaded = true --// FOV Circle local fov = Drawing.new("Circle") fov.Filled = false fov.Transparency = 1 fov.Thickness = 1 fov.Color = Color3.fromRGB(255, 255, 0) fov.NumSides = 1000 --// Functions function update() if getgenv().FOV == true then if fov then fov.Radius = getgenv().FOVSize * 2 fov.Visible = getgenv().ShowFOV fov.Position = Vector2.new(Mouse.X, Mouse.Y + GetGuiInset(GS).Y) return fov end end end function WTVP(arg) return Camera:WorldToViewportPoint(arg) end function WTSP(arg) return Camera.WorldToScreenPoint(Camera, arg) end function getClosest() local closestPlayer local shortestDistance = math.huge for i, v in pairs(game.Players:GetPlayers()) do local notKO = v.Character:WaitForChild("BodyEffects")["K.O"].Value ~= true local notGrabbed = v.Character:FindFirstChild("GRABBING_COINSTRAINT") == nil if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild(getgenv().AimPart) and notKO and notGrabbed then local pos = Camera:WorldToViewportPoint(v.Character.PrimaryPart.Position) local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude if (getgenv().FOV) then if (fov.Radius > magnitude and magnitude < shortestDistance) then closestPlayer = v shortestDistance = magnitude end else if (magnitude < shortestDistance) then closestPlayer = v shortestDistance = magnitude end end end end return closestPlayer end --// Checks if key is down Mouse.KeyDown:Connect(function(k) SelectedKey = SelectedKey:lower() SelectedDisableKey = SelectedDisableKey:lower() if k == SelectedKey then if AimlockState == true then Locked = not Locked if Locked then Victim = getClosest() Notify("Locked onto: "..tostring(Victim.Character.Humanoid.DisplayName)) else if Victim ~= nil then Victim = nil Notify("Unlocked!") end end else Notify("Aimlock is not enabled!") end end if k == SelectedDisableKey then AimlockState = not AimlockState end end) --// Loop update FOV and loop camera lock onto target RS.RenderStepped:Connect(function() update() if AimlockState == true then if Victim ~= nil then Camera.CFrame = CFrame.new(Camera.CFrame.p, Victim.Character[getgenv().AimPart].Position + Victim.Character[getgenv().AimPart].Velocity*getgenv().Prediction) end end end) while wait() do if getgenv().AutoPrediction == true then local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString() local split = string.split(pingvalue,'(') local ping = tonumber(split[1]) if ping < 225 then getgenv().Prediction = 1.4 elseif ping < 215 then getgenv().Prediction = 1.2 elseif ping < 205 then getgenv().Prediction = 1 elseif ping < 190 then getgenv().Prediction = 0.1 elseif ping < 180 then getgenv().Prediction = 0.12 elseif ping < 170 then getgenv().Prediction = 0.15 elseif ping < 160 then getgenv().Prediction = 0.18 elseif ping < 150 then getgenv().Prediction = 0.11 elseif ping < 140 then getgenv().Prediction = 0.113 elseif ping < 130 then getgenv().Prediction = 0.116 elseif ping < 120 then getgenv().Prediction = 0.12 elseif ping < 110 then getgenv().Prediction = 0.124 elseif ping < 105 then getgenv().Prediction = 0.127 elseif ping < 90 then getgenv().Prediction = 0.13 elseif ping < 80 then getgenv().Prediction = 0.133 elseif ping < 70 then getgenv().Prediction = 0.136 elseif ping < 60 then getgenv().Prediction = 0.15038 elseif ping < 50 then getgenv().Prediction = 0.15038 elseif ping < 40 then getgenv().Prediction = 0.145 elseif ping < 30 then getgenv().Prediction = 0.155 elseif ping < 20 then getgenv().Prediction = 0.157 end end end end) end; task.spawn(C_40); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.Hitbox.LocalScript local function C_48() local script = G2L["48"]; local sfx = script.Parent.Sound local Button = script.Parent local sizedrag = script.Parent.Parent.Parent.ExpanderSize.SliderBack.Output local startSize = UDim2.new(0, 275, 0, 30) local hoverSize = UDim2.new(0, 280, 0, 33) script.Parent.MouseEnter:Connect(function() script.Parent:TweenSize(hoverSize, Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 0.25, true) end) script.Parent.MouseLeave:Connect(function() script.Parent:TweenSize(startSize, Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 0.25, true) end) script.Parent.MouseButton1Click:Connect(function() sfx:Play() -- Set the background color to a dark green Button.BackgroundColor3 = Color3.new(0, 95/255, 11/255) -- Fixed color values -- Set the stroke color to a lighter green Button.StrokeColor = Color3.new(0, 177/255, 18/255) -- Fixed color values and property name _G.HeadSize = sizedrag.Value -- Assuming sizedrag is a NumberValue or IntValue _G.Disabled = true game:GetService('RunService').RenderStepped:Connect(function() if _G.Disabled then for _, v in pairs(game:GetService('Players'):GetPlayers()) do if v.Name ~= game:GetService('Players').LocalPlayer.Name then pcall(function() if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize) v.Character.HumanoidRootPart.Transparency = 0.7 v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue") v.Character.HumanoidRootPart.Material = "Neon" v.Character.HumanoidRootPart.CanCollide = false end end) end end end end) end) end; task.spawn(C_48); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.AimbotSmoothnessSLider.SliderBack.LocalScript local function C_5b() local script = G2L["5b"]; local player = game.Players.LocalPlayer local mouse = player:GetMouse() local slider = script.Parent local fill = slider:FindFirstChild("Draggable") local outputValue = script.Parent.Output local outputLabel = script.Parent.Parent.Value if not fill then error("Fill object not found") end fill.Size = UDim2.new(0, 0, 1, 0) outputValue.Value = 0 outputLabel.Text = "0" local sliderActive = false local function updateSlider() local output = math.clamp((mouse.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1) fill.Size = UDim2.new(output, 0, 1, 0) outputValue.Value = output outputLabel.Text = tostring(output + 0.1) end local function onSliderDown() sliderActive = true while sliderActive do updateSlider() task.wait() end end local function onSliderUp() sliderActive = false end script.Parent.Trigger.MouseButton1Down:Connect(onSliderDown) game:GetService("UserInputService").InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then onSliderUp() end end) -- Remove default jump height setting -- player.CharacterAdded:Wait().Humanoid.JumpPower = 7.5 end; task.spawn(C_5b); -- StarterGui.MyLibrary.Main.ContentContainer.AimbotTab.ExpanderSize.SliderBack.LocalScript local function C_6b() local script = G2L["6b"]; local player = game.Players.LocalPlayer if not player then error("Local player not found") end local mouse = player:GetMouse() if not mouse then error("Mouse not found") end local slider = script.Parent if not slider then error("Slider not found") end local fill = slider:FindFirstChild("Draggable") if not fill then error("Fill object not found") end local outputValue = script.Parent.Output local outputLabel = script.Parent.Parent.Value fill.Size = UDim2.new(0, 0, 1, 0) outputValue.Value = 0 outputLabel.Text = "0" local sliderActive = false local function updateSlider() local output = math.clamp((mouse.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1) local outputInt = math.floor(output * 100) fill.Size = UDim2.new(output, 0, 1, 0) outputValue.Value = output outputLabel.Text = tostring(outputInt) end local function onSliderDown() sliderActive = true while sliderActive do updateSlider() task.wait() end end local function onSliderUp() sliderActive = false end slider.Trigger.MouseButton1Down:Connect(onSliderDown) game:GetService("UserInputService").InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then onSliderUp() end end) end; task.spawn(C_6b); -- StarterGui.MyLibrary.Main.LocalScript local function C_6f() local script = G2L["6f"]; local gui = script.Parent.Parent local main = script.Parent main.Draggable = true main.active = true gui.ResetOnSpawn = false end; task.spawn(C_6f); -- StarterGui.MyLibrary.Main.Navigation.Aimbot.ToggleAimbotTab local function C_75() local script = G2L["75"]; --// Variables local Aimbot = script.Parent.Parent.Parent.ContentContainer.AimbotTab local Visuals = script.Parent.Parent.Parent.ContentContainer.VisualTab local Credits = script.Parent.Parent.Parent.ContentContainer.CreditTab local button = script.Parent local sfx = script.Parent.Sound local display = script.Parent.Parent.Parent.ContentContainer.Display --// Actual Function button.MouseButton1Click:Connect(function() if display.Visible == true then display.Visible = false end print("Button clicked!") print("sfx:", sfx) print("Aimbot:", Aimbot) print("Visuals:", Visuals) print("Credits:", Credits) sfx.Volume = 0.5 sfx:Play() Visuals.Visible = false Credits.Visible = false Aimbot.Visible = true print("Code executed successfully!") end) end; task.spawn(C_75); -- StarterGui.MyLibrary.Main.Navigation.Visuals.ToggleVisualsTab local function C_78() local script = G2L["78"]; --// Variables local Aimbot = script.Parent.Parent.Parent.ContentContainer.AimbotTab local Visuals = script.Parent.Parent.Parent.ContentContainer.VisualTab local Credits = script.Parent.Parent.Parent.ContentContainer.CreditTab local button = script.Parent local sfx = script.Parent.Sound local display = script.Parent.Parent.Parent.ContentContainer.Display --// Actual Function button.MouseButton1Click:Connect(function() if display.Visible == false then display.Visible = true end print("Button clicked!") print("sfx:", sfx) print("Aimbot:", Aimbot) print("Visuals:", Visuals) print("Credits:", Credits) sfx.Volume = 0.5 sfx:Play() Visuals.Visible = true Credits.Visible = false Aimbot.Visible = false print("Code executed successfully!") end) end; task.spawn(C_78); -- StarterGui.MyLibrary.Main.Navigation.Info.ToggleCreditsTab local function C_7b() local script = G2L["7b"]; --// Variables local Aimbot = script.Parent.Parent.Parent.ContentContainer.AimbotTab local Visuals = script.Parent.Parent.Parent.ContentContainer.VisualTab local Credits = script.Parent.Parent.Parent.ContentContainer.CreditTab local button = script.Parent local sfx = script.Parent.Sound local dp = script.Parent.Parent.Parent.ContentContainer.Display --// Actual Function button.MouseButton1Click:Connect(function() --// I am retarded took me 2 minutes to realize one fucking thing if dp.Visible == true then dp.Visible = false end print("Button clicked!") print("sfx:", sfx) print("Aimbot:", Aimbot) print("Visuals:", Visuals) print("Credits:", Credits) sfx.Volume = 0.5 sfx:Play() Visuals.Visible = false Credits.Visible = true Aimbot.Visible = false print("Code executed successfully!") end) end; task.spawn(C_7b); -- StarterGui.MyLibrary.Loader.Topbar2.Minimize.LocalScript local function C_85() local script = G2L["85"]; local button = script.Parent local main = script.Parent.Parent.Parent.Parent.Loader button.MouseButton1Click:Connect(function() main.Visible = false end) end; task.spawn(C_85); -- StarterGui.MyLibrary.Loader.Container.Loginb.Enter.LocalScript local function C_8c() local script = G2L["8c"]; -- Define constants and variables local PASSWORD_INPUT = script.Parent.Parent.Parent.Loginb local MAIN_UI = script.Parent.Parent.Parent.Parent.Parent.Main local LOGIN_UI = script.Parent.Parent.Parent.Parent.Parent.Loader -- Initialize main UI visibility MAIN_UI.Visible = false -- Define expiration dates local EXPIRATION_DATES = { one_second = os.date("%Y-%m-%d", os.time() + 1), day = os.date("%Y-%m-%d", os.time() + 24*60*60), week = os.date("%Y-%m-%d", os.time() + 7*24*60*60), month = os.date("%Y-%m-%d", os.time() + 30*24*60*60), lifetime = "2099-12-31" } -- Define licenses local LICENSES = { one_second = { license = "kw-4135314sD24135dTG.1-second", expirationDate = EXPIRATION_DATES.one_second, redeemed = false }, day = { license = "kw-41321B213lK21Dn51m.1-day", expirationDate = EXPIRATION_DATES.day, redeemed = false }, week = { license = "kw-41321B213lK21Dn51m.1-week", expirationDate = EXPIRATION_DATES.week, redeemed = false }, month = { license = "kw-41321B213lK21Dn51m.1-month", expirationDate = EXPIRATION_DATES.month, redeemed = false }, lifetime = { license = "friend", expirationDate = EXPIRATION_DATES.lifetime, redeemed = false } } -- Define a function to check license validity local function checkLicense(licenseKey) local currentDate = os.date("%Y-%m-%d") for keyType, licenseData in pairs(LICENSES) do if licenseKey == licenseData.license then if currentDate <= licenseData.expirationDate and not licenseData.redeemed then licenseData.redeemed = true return true, keyType elseif licenseData.redeemed then PASSWORD_INPUT.Text = "Key already redeemed" return false else PASSWORD_INPUT.Text = "License Expired" return false end end end PASSWORD_INPUT.Text = "Invalid License" return false end -- Connect button click event script.Parent.MouseButton1Click:Connect(function() local licenseKey = PASSWORD_INPUT.Text local isValid, keyType = checkLicense(licenseKey) if isValid then if keyType == "one_second" then wait(1) MAIN_UI.Visible = false else LOGIN_UI.Visible = false MAIN_UI.Visible = true end game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "Ketaware"; Text = "Succesfully Loaded, Have a nice day!"; Duration = 5; }) print("Ketaware loaded!") end end) -- Add some security measures -- 1. Obfuscate license keys using a simple XOR cipher local function obfuscateLicenseKey(licenseKey) local xorKey = "ketaware_secret_key" local obfuscatedKey = "" for i = 1, #licenseKey do obfuscatedKey = obfuscatedKey.. string.char(bit.bxor(string.byte(licenseKey, i), string.byte(xorKey, i % #xorKey + 1))) end return obfuscatedKey end -- 2. Store obfuscated license keys in a separate module local LicenseKeys = {} for keyType, licenseData in pairs(LICENSES) do LicenseKeys[keyType] = obfuscateLicenseKey(licenseData.license) end -- 3. Use the obfuscated license keys in the checkLicense function local function checkLicense(licenseKey) local currentDate = os.date("%Y-%m-%d") for keyType, obfuscatedLicenseKey in pairs(LicenseKeys) do if licenseKey == obfuscatedLicenseKey then --... end end --... end end; task.spawn(C_8c); -- StarterGui.MyLibrary.Loader.1 local function C_90() local script = G2L["90"]; local frame = script.Parent.Parent.Loader local gui = script.Parent.Parent local main = script.Parent.Parent.Main frame.Active = true frame.AnchorPoint = Vector2.new(0.5, 0.5) frame.Draggable = true if main.Visible then frame.Visible = not main.Visible else main.Visible = false frame.Visible = true end end; task.spawn(C_90); return G2L["1"], require;
